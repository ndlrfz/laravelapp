[supervisord]
nodaemon=true
logfile=/dev/null
logfile_maxbytes=0
pidfile=/run/supervisord.pid

; http://supervisord.org/configuration.html?highlight=pid#unix-http-server-section-settings
[unix_http_server]
file = /var/run/supervisord.sock
chmod = 0777
chown= nobody:nogroup

; http://supervisord.org/configuration.html?highlight=pid#supervisorctl-section-example
[supervisorctl]
serverurl = unix://var/run/supervisord.sock

; If you don't have this and run `supervisorctl`, you'll end up with this error:
; Sorry, supervisord responded but did not recognize the supervisor namespace commands that supervisorctl uses to control it.
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[program:laravel-queue]
process_name=%(program_name)s_%(process_num)02d
directory=/var/www/html
command=php84 artisan queue:listen --sleep=5 --tries=3 --timeout=60 --delay=5
autostart=true
autorestart=true
user=app
numprocs=1
redirect_stderr=true
stdout_logfile=storage/logs/queue.log
stopwaitsecs=3600

[program:laravel-schedule]
process_name=%(program_name)s_%(process_num)02d
directory=/var/www/html
command=/bin/sh -c "while [ true ]; do (php84 artisan schedule:run --verbose --no-interaction &); sleep 60; done"
autostart=true
autorestart=true
user=app
numprocs=1
redirect_stderr=true
stdout_logfile=storage/logs/laravel-schedule.log
stopwaitsecs=3600

[program:php-fpm]
command=php-fpm84 -F
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
autorestart=false
startretries=0

[program:nginx]
command=nginx -g 'daemon off;'
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
autorestart=false
startretries=0


